
import React from 'react';
import { useTheme } from '@/context/ThemeContext';
import { useLanguage } from '@/context/LanguageContext';
import { Check } from 'lucide-react';

const ThemeSettings: React.FC = () => {
  const { baseTheme, setBaseTheme, seasonalTheme, setSeasonalTheme } = useTheme();
  const { t } = useLanguage();

  const themes = [
    {
      id: 'system',
      name: t('settings.theme.auto') || '–ê–≤—Ç–æ',
      description: t('settings.theme.autoDesc') || '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π'
    },
    {
      id: 'light',
      name: t('settings.theme.light') || '–°–≤–µ—Ç–ª–∞—è',
      description: t('settings.theme.lightDesc') || '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–Ω–µ–º'
    },
    {
      id: 'dark',
      name: t('settings.theme.dark') || '–¢–µ–º–Ω–∞—è',
      description: t('settings.theme.darkDesc') || '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ—á–µ—Ä–æ–º'
    },
    {
      id: 'dark-night',
      name: t('settings.theme.darkNight') || '–¢–µ–º–Ω–∞—è –Ω–æ—á—å',
      description: t('settings.theme.darkNightDesc') || '–ì–ª—É–±–æ–∫–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç—Ä–∞—Å—Ç–æ–º'
    }
  ];

  const handleThemeSelect = (themeId: string) => {
    setBaseTheme(themeId as 'light' | 'dark' | 'dark-night' | 'system');
  };

  const handleSeasonalToggle = () => {
    setSeasonalTheme(seasonalTheme === 'default' ? 'autumn' : 'default');
  };

  return (
    <div className="space-y-6">
      <div>
        <h3 className="font-medium mb-1">{t('settings.theme') || '–¢–µ–º–∞'}</h3>
        <p className="text-sm text-muted-foreground">
          {t('settings.themeDescription') || '–¢–µ–º–∞ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.'}
        </p>
      </div>

      <div className="space-y-0">
        {themes.map((theme, index) => (
          <div 
            key={`${theme.id}-${index}`}
            className="flex items-center justify-between py-4 cursor-pointer hover:bg-muted/50 rounded-lg px-2 transition-colors"
            onClick={() => handleThemeSelect(theme.id)}
          >
            <div className="flex-1">
              <p className="font-medium text-base">{theme.name}</p>
              <p className="text-sm text-muted-foreground mt-1">
                {theme.description}
              </p>
            </div>
            {baseTheme === theme.id && (
              <div className="flex items-center justify-center w-6 h-6 bg-blue-500 rounded-full ml-4">
                <Check className="w-4 h-4 text-white" />
              </div>
            )}
          </div>
        ))}
      </div>

      {/* Seasonal Theme Toggle */}
      <div className="border-t pt-6 mt-6">
        <div className="mb-4">
          <h3 className="font-medium mb-1">{t('settings.seasonalTheme') || '–°–µ–∑–æ–Ω–Ω–∞—è —Ç–µ–º–∞'}</h3>
          <p className="text-sm text-muted-foreground">
            {t('settings.seasonalThemeDescription') || '–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏.'}
          </p>
        </div>

        <div 
          className="flex items-center justify-between py-4 cursor-pointer hover:bg-muted/50 rounded-lg px-2 transition-colors"
          onClick={handleSeasonalToggle}
        >
          <div className="flex items-center gap-3">
            <div className="text-2xl">
              {seasonalTheme === 'autumn' ? 'üçÇ' : 'üåø'}
            </div>
            <div className="flex-1">
              <p className="font-medium text-base">
                {seasonalTheme === 'autumn' ? 
                  (t('settings.theme.autumn') || '–û—Å–µ–Ω–Ω—è—è') : 
                  (t('settings.theme.default') || '–û–±—ã—á–Ω–∞—è')
                }
              </p>
              <p className="text-sm text-muted-foreground mt-1">
                {seasonalTheme === 'autumn' ? 
                  (t('settings.theme.autumnDesc') || '–£—é—Ç–Ω–∞—è –æ—Å–µ–Ω–Ω—è—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ —Å –ø–∞–¥–∞—é—â–∏–º–∏ –ª–∏—Å—Ç—å—è–º–∏') :
                  (t('settings.theme.defaultDesc') || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–µ–∑ –¥–µ–∫–æ—Ä–∞—Ü–∏–π')
                }
              </p>
            </div>
          </div>
          {seasonalTheme === 'autumn' && (
            <div className="flex items-center justify-center w-6 h-6 bg-autumn-button rounded-full ml-4">
              <Check className="w-4 h-4 text-autumn-button-text" />
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ThemeSettings;
