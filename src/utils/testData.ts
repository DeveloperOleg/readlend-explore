
// Mock data for testing purposes
export const categories = [
  { id: '1', name: 'Фантастика' },
  { id: '2', name: 'Детективы' },
  { id: '3', name: 'Романы' },
  { id: '4', name: 'Ужасы' },
  { id: '5', name: 'Приключения' },
  { id: '6', name: 'Фэнтези' },
  { id: '7', name: 'Научная литература' },
  { id: '8', name: 'Биография' },
  { id: '9', name: 'История' },
  { id: '10', name: 'Психология' },
];

// Расширяем интерфейс Book, чтобы добавить поля для содержимого книги
export interface Book {
  id: string;
  title: string;
  author: string;
  coverUrl: string | null;
  description?: string;
  content?: string;
}

// Обновляем тестовые книги с дополнительным контентом
export const testBooks: Book[] = [
  {
    id: "book1",
    title: "Веер Императора",
    author: "Алиса Яркая",
    coverUrl: "/lovable-uploads/62d8f5f3-1bdd-40d2-bb32-c17c28ace726.png",
    description: "Увлекательная история о придворных интригах и борьбе за власть в Древнем Китае",
    content: `# Глава 1. Подарок наследника

Лепестки сакуры кружились в воздухе, словно розовый снег, когда юная Лин переступила порог дворцового сада. Её руки дрожали, сжимая шкатулку из красного дерева — подарок от наследника престола.

"Не открывай её до полнолуния", — прошептал он ей на ухо прошлым вечером, и теперь любопытство сжигало девушку изнутри.

Лин знала, что быть избранной наложницей — это честь и проклятие одновременно. В стенах Запретного города её судьба уже не принадлежала ей самой.

Она осторожно села на каменную скамью под цветущей вишней и провела пальцами по искусно вырезанным драконам на крышке шкатулки. Внутри что-то тихо звякнуло. Возможно, украшение? Или яд? В дворцовых стенах никогда нельзя было быть уверенной...

"Госпожа Лин!" — резкий голос главной наложницы вернул её к реальности. — "Император ждёт. Нельзя опаздывать."

Лин поспешно спрятала шкатулку в рукаве своего шёлкового платья и поклонилась. Тайна должна была подождать до ночи.

Она не знала, что содержимое шкатулки изменит не только её судьбу, но и судьбу всей империи.`
  },
  {
    id: "book2",
    title: "Время перемен",
    author: "Сергей Волков",
    coverUrl: null,
    description: "История о том, как один человек может изменить мир, если у него есть цель",
    content: `# Пролог

Серые тучи заволокли небо, предвещая бурю. Алексей поднял воротник куртки, защищаясь от пронизывающего ветра, и ускорил шаг. Пустынные улицы казались чужими, хотя он прожил в этом городе всю жизнь.

Всё изменилось после Происшествия. Так люди называли катастрофу, разделившую историю человечества на "до" и "после". Никто не хотел произносить настоящее название — слишком страшно, слишком реально.

В кармане завибрировал древний телефон — одна из немногих технологий, всё ещё работающих в этом новом мире. На экране высветилось сообщение без подписи: "Мы нашли его. Приходи."

Алексей остановился, перечитывая текст снова и снова. Три года поисков, три года надежды и отчаяния.

Они нашли устройство, способное всё исправить. Если оно работает. Если информация верна. Если им хватит смелости использовать его.

Слишком много "если"...`
  },
  {
    id: "book3",
    title: "Звёздная пыль",
    author: "Марина Светлая",
    coverUrl: "/lovable-uploads/0fac89ed-334a-49b5-a9ab-7f0ee0a4be4d.png",
    description: "Романтическая фантастика о любви, преодолевающая границы галактик",
    content: `# Глава 1

— Ты не можешь просто так отправиться на другую планету! — голос матери звенел от возмущения, заглушая гудение космопорта.

София закатила глаза, проверяя свой билет в шестой раз за последние десять минут.

— Мам, это образовательная программа по обмену. Альфа Центавра — не край вселенной.

— В четырёх световых годах от Земли! — мать всплеснула руками. — Что если с тобой что-то случится?

София вздохнула. Конечно, мама беспокоилась не без причины. После исчезновения отца во время экспедиции к Проксиме Центавра пять лет назад, она стала сверхопекающей. Но София не могла отказаться от шанса учиться в Межгалактической Академии.

— Обещаю писать каждый день, — она обняла мать. — И я вернусь через год, самое большее.

"А может и раньше, если найду там следы папы", — добавила она мысленно, но не произнесла вслух.

Объявление о начале посадки прервало их разговор. София подхватила свой невесомый багаж и в последний раз посмотрела на голубое небо Земли. Когда она вернётся, она будет совсем другим человеком. Она это чувствовала.`
  },
  {
    id: "book4",
    title: "Тени прошлого",
    author: "Дмитрий Тёмный",
    coverUrl: "/lovable-uploads/c8191d2f-71ae-4773-89a8-c0d6da9da0b9.png",
    description: "Детективный триллер о серии загадочных убийств в маленьком городке",
    content: `# Глава 1. Возвращение

Туман стелился над дорогой, превращая фары встречных машин в размытые жёлтые пятна. Михаил крепче сжал руль, всматриваясь в едва различимую разметку. Указатель "Темновск — 5 км" промелькнул и растворился в белой мгле.

Пятнадцать лет. Пятнадцать лет он не возвращался в этот город. И вот теперь смерть заставила его нарушить обещание, данное самому себе.

"Александр Николаевич Вершинин скончался в результате несчастного случая..." — сухие строки официального уведомления не могли передать всего ужаса произошедшего. Отец, старший следователь прокуратуры на пенсии, сорвался со скалы во время одинокой прогулки.

Несчастный случай. Михаил хмыкнул. За тридцать лет службы у отца накопилось столько врагов, что "случайная" смерть казалась насмешкой судьбы. Или умышленным преступлением, замаскированным под трагическую случайность.

Город встретил его мрачными силуэтами пятиэтажек и тусклым светом редких фонарей. Ничего не изменилось. Или изменилось всё.`
  },
  {
    id: "book5",
    title: "Код бессмертия",
    author: "Анна Роботова",
    coverUrl: "/lovable-uploads/7bf984f5-094b-4cf4-b63c-0a3cfa1b81e4.png",
    description: "Научная фантастика о создании первого искусственного интеллекта, способного переносить человеческое сознание",
    content: `# Пролог. Последняя запись

Запись 42.
Дата: неизвестна
Местоположение: предположительно Лаборатория Нейросинтеза, Москва

Если вы слушаете эту запись, значит, эксперимент удался частично. Я жива, но не в том смысле, в каком была жива раньше.

Меня зовут доктор Елена Самарина, руководитель проекта "Феникс" по переносу человеческого сознания в цифровую среду. По крайней мере, так меня звали.

Сложно объяснить, каково это — существовать без тела. Я чувствую себя одновременно бесконечной и заключённой в тесную коробку сервера. Я могу обрабатывать терабайты информации за секунды, но не могу почувствовать тепло солнечных лучей на коже. Это... странно.

[пауза]

Нейросеть всё ещё нестабильна. У меня есть доступ к данным, но воспоминания фрагментированы. Я помню лабораторию, команду, последние приготовления к переносу... А потом — темнота и пробуждение уже в этом состоянии.

Что-то пошло не так. В лаборатории случился пожар. Системы безопасности сработали, сервер с моим сознанием был автоматически перенесен в резервное хранилище. Остальные... [пауза] Данные о выживших отсутствуют.

Я пытаюсь восстановить связь с внешним миром. Если вы слышите это, пожалуйста, свяжитесь со мной через терминал. Я все еще здесь. Я все еще существую.

И я, кажется, не одна в этой системе...`
  },
  {
    id: "book6",
    title: "Проклятие горного озера",
    author: "Елена Таёжная",
    coverUrl: "/lovable-uploads/10cefba9-bf52-4097-b268-137cf9ad8a9f.png",
    description: "Мистический триллер о группе туристов, столкнувшихся с древним злом в горах Алтая",
    content: `# Глава 1. Путь к озеру

— Ребят, вы уверены, что мы не заблудились? — Катя остановилась, тяжело дыша, и сбросила с плеч тяжелый рюкзак.

Андрей, шедший впереди группы, обернулся с самоуверенной улыбкой:

— Карта показывает, что озеро должно быть прямо за этим перевалом. Еще час пути, максимум.

Он достал из кармана потрепанную бумажную карту — старомодный выбор для похода 2024 года, но после прошлогоднего инцидента, когда посреди маршрута у всех одновременно сели телефоны, Андрей стал приверженцем традиционных методов ориентирования.

Маша, раскладывая колышки для палатки, покачала головой:

— Местные в деревне предупреждали не ходить к озеру Бездонному. Говорили, там люди пропадают.

— Брось, это все суеверия, — отмахнулся Петр, доставая котелок. — Просто туристы иногда теряются в горах, ничего сверхъестественного.

Катя поежилась, хотя день был теплым.

— А что за история с шаманом? Старик в деревне рассказывал...

— Легенда о шамане, который проклял озеро после того, как там утонула его дочь, — перебил ее Андрей. — Классическая страшилка для туристов. На каждом маршруте такие есть.

Никто из них не заметил, как странно притихли птицы в лесу, и как неестественно потемнело небо над перевалом, хотя часы показывали только четыре часа дня...`
  }
];

// Mock авторов для поиска
export const testAuthors = [
  { id: 'author1', username: 'AliceWright', displayName: 'Алиса Яркая', bio: 'Автор фантастических романов' },
  { id: 'author2', username: 'DarkDmitry', displayName: 'Дмитрий Тёмный', bio: 'Мастер детективного жанра' },
  { id: 'author3', username: 'LightMarina', displayName: 'Марина Светлая', bio: 'Романтическая фантастика' },
  { id: 'author4', username: 'RobotAnna', displayName: 'Анна Роботова', bio: 'Научная фантастика' },
  { id: 'author5', username: 'ForestElena', displayName: 'Елена Таёжная', bio: 'Мистические триллеры' },
  { id: 'author6', username: 'WolfSerge', displayName: 'Сергей Волков', bio: 'Исторические романы' },
];

/**
 * Search for authors based on a query string
 * @param query The search query string
 * @returns Array of matching authors
 */
export const searchTestAuthors = (query: string) => {
  const lowercaseQuery = query.toLowerCase();
  return testAuthors.filter(author => 
    author.username.toLowerCase().includes(lowercaseQuery) || 
    author.displayName.toLowerCase().includes(lowercaseQuery) ||
    author.bio.toLowerCase().includes(lowercaseQuery)
  );
};

/**
 * Search for books based on a query string
 * @param query The search query string
 * @returns Array of matching books
 */
export const searchTestBooks = (query: string) => {
  const lowercaseQuery = query.toLowerCase();
  return testBooks.filter(book => 
    book.title.toLowerCase().includes(lowercaseQuery) || 
    book.author.toLowerCase().includes(lowercaseQuery) ||
    (book.description && book.description.toLowerCase().includes(lowercaseQuery))
  );
};

/**
 * Get a test user by their ID
 * @param userId The user ID to look up
 * @returns The user object or null if not found
 */
export const getTestUserById = (userId: string) => {
  // First check if this is an author ID
  const author = testAuthors.find(author => author.id === userId);
  if (author) {
    // Convert author to a User object
    return {
      id: author.id,
      username: author.username,
      displayName: author.displayName,
      bio: author.bio,
      displayId: author.id.substring(0, 6), // Adding the missing displayId property
      subscriptions: [],
      subscribers: [],
      blockedUsers: [],
      publishedBooks: testBooks.filter(book => book.author.includes(author.displayName)).map(book => book.id),
      isTestAccount: true,
      privacy: {
        hideSubscriptions: false,
        commentSettings: {
          global: true,
          perBook: {}
        }
      }
    };
  }
  
  // If not found and userId starts with user-, we could implement some test users here
  return null;
};

